# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# This is a schema file for yapyseq sequences.

# This file a "yamale" schema, used to validate another yaml file.
# For more information, check the project page of the python module yamale
# https://github.com/23andMe/Yamale

# TODO: implement sub-sequences

# ------------------------------------------------------------------------------
# First document is the schema
# ------------------------------------------------------------------------------
---
sequence:

  info:
    name: str(required=False)  # name of the sequence

  nodes: list(include('function_node'), include('simple_special_node'), include('seq_var_node'),  required=True)

  transitions: list(include('transition'), required=True)


# ------------------------------------------------------------------------------
# Second document contains includes for the first document
# ------------------------------------------------------------------------------
---
function_node:
  type: enum('function', required=True)
  id: int(required=True)  # unique id of the node
  name: str(required=False)  # name of the node
  function: str(required=True)  # name of the function to run
  arguments: map(required=False)  # args to give to the function
  timeout: int(required=False)  # timeout of the function, in sec

simple_special_node:
  type: enum('start', 'stop', 'parallel_split', 'parallel_sync', required=True)
  id: int(required=True)  # unique id of the node
  name: str(required=False)  # name of the node

seq_var_node:
  type: enum('seq_var', required=True)
  id: int(required=True)  # unique id of the node
  name: str(required=False)  # name of the node
  assignations: map(required=True)  # variables and their assignations

transition:
  id: int(required=True)  # unique id of the transition
  source: int(required=True)  # unique id of the source
  target: int(required=True)  # unique id of the target
  condition: str(required=False)  # condition expression TODO: make a custom Validator for conditions (see doc of yamale)
